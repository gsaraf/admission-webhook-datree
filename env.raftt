resources = namespace_resources()

# datree-webhook-server setup
webhook_server = resources.deployments["datree-webhook-server"]
webhook_server.spec.template.spec.containers[0].command = ["sh"]
webhook_server.spec.template.spec.containers[0].args = ["-c", "while [ ! -f /out/webhook-datree ]; do echo 'waiting for binary' && sleep 1; done; /out/webhook-datree"]

builder = Container(yaml="""
name: builder
image: golang:1.19-alpine
workingDir: /go/src/app
command: ["sh"]
args: ["-c", "apk add build-base && go build -o /out/webhook-datree main.go"]
""")
webhook_server.spec.template.spec.containers.append(builder)
webhook_server_out = volume("webhook-server-out")
webhook_server.mount(repo_volume(), "/go/src/app")
webhook_server.mount(repo_volume(), "/go/src/app", container="builder")
webhook_server.mount(webhook_server_out, "/out", no_copy=True)
webhook_server.mount(webhook_server_out, "/out", no_copy=True, container="builder")
webhook_server.add_raftt_cli(container="builder")

# hot reload
register_hook(
  on=events.OnFileChanged(
    workload=webhook_server,
    container="builder",
    patterns="/go/src/app/**/*.go"),
  do=[
    actions.CMD(
        workload=webhook_server,
        container="builder",
        cmd=["sh", "-c", "go build -o /out/webhook-server . && raftt restart datree-webhook-server"])])
    
# datree-cluster-scanner-server setup
# secondary_repo = clone_repo_branch("https://github.com/datreeio/cluster-scanner", "raftt_poc")

# scanner_server = resources.deployments["datree-cluster-scanner-server"]
# scanner_server.spec.template.spec.containers[0].image="golang:1.18-alpine"
# scanner_server.spec.template.spec.containers[0].working_dir = "/go/src/app"
# scanner_server.spec.template.spec.containers[0].command = ["go"]
# scanner_server.spec.template.spec.containers[0].args = ["run", "/go/src/app"]
# scanner_server.mount(repo_volume(secondary_repo), "/go/src/app")

# hot reload
# scanner_server.add_raftt_cli()
# register_hook(
#   on=events.OnFileChanged(
#     workload=scanner_server,
#     patterns="/go/src/app/**/*.go"),
#   do=actions.CMD(
#     workload=scanner_server,
#     cmd=["raftt", "restart", "datree-cluster-scanner-server"]))

deploy(resources)
